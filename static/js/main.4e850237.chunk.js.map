{"version":3,"sources":["components/Face/Face.jsx","components/Eyes/Eyes.jsx","components/Mouth/Mouth.jsx","components/Button/Button.jsx","components/Badge/Badge.jsx","containers/ButtonContainer.jsx","components/Eyebrows/Eyebrows.jsx","components/Pupil/Pupil.jsx","components/Eye/Eye.jsx","containers/EyeContainer.jsx","containers/App.jsx","serviceWorker.js","index.js"],"names":["Face","_ref","black","className","children","react_default","a","createElement","classNames","defaultProps","Eyes","Mouth","sad","Button","badge","onClick","type","Badge","on","ButtonContainer","components_Button_Button","components_Badge_Badge","Eyebrows","show","Pupil","percent","x","y","style","top","concat","left","Eye","components_Pupil_Pupil","EyeContainer","state","handleCursor","e","clientX","clientY","_window","window","innerWidth","innerHeight","_this","setState","addEventListener","this","removeEventListener","_this$state","react","components_Eye_Eye","Component","App","sachith","handleClick","containers_ButtonContainer","components_Face_Face","components_Eyes_Eyes","components_Eyebrows_Eyebrows","containers_EyeContainer","components_Mouth_Mouth","Boolean","location","hostname","match","ReactDOM","render","containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4e850237.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './Face.css';\n\nconst propTypes = {\n  black: PropTypes.bool,\n  className: PropTypes.string,\n  children: PropTypes.node.isRequired\n};\n\nconst defaultProps = {\n  black: false,\n  className: ''\n};\n\nconst Face = ({ black, className, children }) => (\n  <div className={classNames('face', { black }, className)}>\n    {children}\n  </div>\n);\n\nFace.propTypes = propTypes;\nFace.defaultProps = defaultProps;\n\nexport default Face;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './Eyes.css';\n\nconst propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node.isRequired\n};\n\nconst defaultProps = {\n  className: ''\n};\n\nconst Eyes = ({ className, children }) => (\n  <div className={classNames('eyes', className)}>\n    {children}\n  </div>\n);\n\nEyes.propTypes = propTypes;\nEyes.defaultProps = defaultProps;\n\nexport default Eyes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Mouth.css';\n\nconst propTypes = {\n  sad: PropTypes.bool,\n  className: PropTypes.string\n};\n\nconst defaultProps = {\n  sad: false,\n  className: ''\n};\n\nconst Mouth = ({ sad }) => (\n  <div className={sad ? 'sadMouth' : 'mouth'} />\n);\n\nMouth.propTypes = propTypes;\nMouth.defaultProps = defaultProps;\n\nexport default Mouth;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './Button.css';\n\nconst propTypes = {\n  badge: PropTypes.string,\n  onClick: PropTypes.func,\n  className: PropTypes.string,\n  children: PropTypes.node.isRequired\n};\n\nconst defaultProps = {\n  onClick: () => {},\n  badge: '',\n  className: ''\n};\n\nconst Button = ({ badge, onClick, className, children }) => (\n  <button\n    type=\"button\"\n    className={classNames('button', className)}\n    onClick={onClick}\n  >\n    {children}\n  </button>\n);\n\nButton.propTypes = propTypes;\nButton.defaultProps = defaultProps;\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './Badge.css';\n\nconst propTypes = {\n  on: PropTypes.bool,\n  className: PropTypes.string,\n  children: PropTypes.node.isRequired\n};\n\nconst defaultProps = {\n  on: false,\n  className: ''\n};\n\nconst Badge = ({ on, className, children }) => (\n  <div className={classNames('badge', { on }, className)}>\n    {children}\n  </div>\n);\n\nBadge.propTypes = propTypes;\nBadge.defaultProps = defaultProps;\n\nexport default Badge;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '../components/Button/Button';\nimport Badge from '../components/Badge/Badge';\n\nconst propTypes = {\n  onClick: PropTypes.func,\n  className: PropTypes.string,\n};\n\nconst defaultProps = {\n  onClick: () => {},\n  className: ''\n};\n\nconst ButtonContainer = ({ on, onClick }) => (\n  <Button onClick={onClick}>\n    Sachith mode <Badge on={on}>{on ? 'on' : 'off'}</Badge>\n  </Button>\n);\n\nButtonContainer.propTypes = propTypes;\nButtonContainer.defaultProps = defaultProps;\n\nexport default ButtonContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './Eyebrows.css';\n\nconst propTypes = {\n  show: PropTypes.bool,\n  className: PropTypes.string\n};\n\nconst defaultProps = {\n  show: false,\n  className: ''\n};\n\nconst Eyebrows = ({ show, className }) => (\n  <div className={classNames('eyebrows', { show }, className)} />\n);\n\nEyebrows.propTypes = propTypes;\nEyebrows.defaultProps = defaultProps;\n\nexport default Eyebrows;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './Pupil.css';\n\nconst propTypes = {\n  percent: PropTypes.shape({\n    x: PropTypes.number,\n    y: PropTypes.number\n  }),\n  className: PropTypes.string\n};\n\nconst defaultProps = {\n  percent: { x: 50, y: 50 },\n  className: ''\n};\n\nconst Pupil = ({ percent, className }) => {\n  const { x, y } = percent;\n  const style = {\n    top: `${y}%`,\n    left: `${x}%`\n  };\n  return (\n    <div className={classNames('pupil', className)} style={style} />\n  );\n};\n\nPupil.propTypes = propTypes;\nPupil.defaultProps = defaultProps;\n\nexport default Pupil;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Pupil from '../Pupil/Pupil';\nimport './Eye.css';\n\nconst propTypes = {\n  percent: PropTypes.shape({\n    x: PropTypes.number,\n    y: PropTypes.number\n  }),\n  className: PropTypes.string,\n};\n\nconst defaultProps = {\n  percent: { x: 50, y: 50 },\n  className: ''\n};\n\nconst Eye = ({ percent, className }) => (\n  <div className={classNames('eye', className)}>\n    <div className=\"retina\">\n      <Pupil percent={percent} />\n    </div>\n  </div>\n);\n\nEye.propTypes = propTypes;\nEye.defaultProps = defaultProps;\n\nexport default Eye;\n","import React, { Component, Fragment } from 'react';\nimport Eye from '../components/Eye/Eye';\n\nclass EyeContainer extends Component {\n\n  state = {\n    x: 50,\n    y: 50\n  };\n\n  componentDidMount() {\n    window.addEventListener('mousemove', this.handleCursor);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('mousemove', this.handleCursor);\n  }\n\n  handleCursor = e => {\n    const { clientX, clientY } = e;\n    const { innerWidth, innerHeight } = window;\n    this.setState(() => ({\n      x: clientX * 100 / innerWidth,\n      y: clientY * 100 / innerHeight\n    }))\n  };\n\n  render() {\n    const {  x, y } = this.state;\n    return (\n      <Fragment>\n        <Eye percent={{ x, y }} />\n        <Eye percent={{ x, y }} />\n      </Fragment>\n    )\n  }\n}\n\nexport default EyeContainer;\n","import React, { Component, Fragment } from 'react';\nimport Face from '../components/Face/Face';\nimport Eyes from '../components/Eyes/Eyes';\nimport Mouth from '../components/Mouth/Mouth';\nimport ButtonContainer from './ButtonContainer';\nimport Eyebrows from '../components/Eyebrows/Eyebrows';\nimport EyeContainer from './EyeContainer';\nimport 'typeface-montserrat';\n\nclass App extends Component {\n\n  state = {\n    sachith: false\n  };\n\n  handleClick = () => this.setState(({ sachith }) => ({ sachith: !sachith }));\n\n  render() {\n    const { sachith } = this.state;\n    return (\n      <Fragment>\n        <ButtonContainer on={sachith} onClick={this.handleClick} />\n        <Face black={sachith}>\n          <Eyes>\n            <Eyebrows show={sachith} />\n            <EyeContainer />\n          </Eyes>\n          <Mouth sad={sachith} />\n        </Face>\n      </Fragment>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}